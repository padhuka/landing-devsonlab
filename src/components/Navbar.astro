<header>
  <nav class="navbar" aria-label="Primary">
    <a href="/" class="logo">devsonLab</a>

    <button class="menu-toggle" aria-expanded="false" aria-controls="primary-navigation" aria-label="Toggle navigation">
      <!-- simple hamburger icon -->
      <svg width="24" height="24" viewBox="0 0 24 24" aria-hidden="true" focusable="false">
        <path d="M3 6h18M3 12h18M3 18h18" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path>
      </svg>
    </button>

    <ul id="primary-navigation" class="nav-links" role="menubar">
      <li role="none"><a role="menuitem" href="#home">Home</a></li>
      <li role="none"><a role="menuitem" href="#about">Tentang Kami</a></li>
      <li role="none"><a role="menuitem" href="#services">Layanan</a></li>
      <li role="none"><a role="menuitem" href="#portfolio">Portfolio</a></li>
      <li role="none"><a role="menuitem" href="#clients">Client</a></li>
      <li role="none"><a role="menuitem" href="#contact">Kontak</a></li>
    </ul>
  </nav>
</header>

<style>
  /* basic header */
  header {
    width: 100%;
    background: #fff;
    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.06);
    position: sticky;
    top: 0;
    z-index: 999;
  }
  .navbar {
    max-width: 1200px;
    margin: 0 auto;
    padding: 1rem 1.2rem;
    display: flex;
    align-items: center;
    justify-content: space-between;
    position: relative;
  }

  /* logo */
  .logo {
    font-size: 1.25rem;
    font-weight: 700;
    color: #111;
    text-decoration: none;
  }

  /* desktop nav */
  .nav-links {
    display: flex;
    gap: 1.1rem;
    list-style: none;
    margin: 0;
    padding: 0;
    align-items: center;
  }
  .nav-links a {
    text-decoration: none;
    color: #222;
    font-weight: 500;
    padding: 0.25rem 0.35rem;
    display: inline-block;
  }

  /* hamburger button */
  .menu-toggle {
    display: none;
    background: none;
    border: 0;
    padding: 0.25rem;
    cursor: pointer;
    color: #111;
  }

  /* accessibility helper (screen readers) */
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
  }

  /* MOBILE */
  @media (max-width: 768px) {
    .menu-toggle {
      display: block;
    }

    /* hide desktop links by collapsing height; animation uses max-height */
    .nav-links {
      position: absolute;
      top: 100%;
      right: 1rem;
      left: 1rem;
      background: #fff;
      flex-direction: column;
      align-items: flex-start;
      gap: 0;
      margin: 0;
      padding: 0;
      border-radius: 8px;
      box-shadow: 0 6px 18px rgba(0, 0, 0, 0.08);
      overflow: hidden;
      max-height: 0; /* closed */
      transition:
        max-height 0.28s ease,
        padding 0.28s ease;
      border: 1px solid rgba(0, 0, 0, 0.04);
    }

    .nav-links li {
      width: 100%;
    }
    .nav-links a {
      display: block;
      width: 100%;
      padding: 0.95rem 1rem;
      border-bottom: 1px solid rgba(0, 0, 0, 0.04);
    }

    /* when open */
    .nav-links.open {
      max-height: 600px;
      padding: 0.25rem 0.5rem 0.5rem 0.5rem;
    } /* big enough for menu items */
  }

  /* Prevent body scroll when menu open */
  body.menu-open {
    overflow: hidden;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const toggle = document.querySelector('.menu-toggle')
    const navLinks = document.querySelector('.nav-links')
    const navbar = document.querySelector('.navbar')

    if (!toggle || !navLinks) return

    const openMenu = () => {
      navLinks.classList.add('open')
      toggle.setAttribute('aria-expanded', 'true')
      document.body.classList.add('menu-open')
    }

    const closeMenu = () => {
      navLinks.classList.remove('open')
      toggle.setAttribute('aria-expanded', 'false')
      document.body.classList.remove('menu-open')
    }

    toggle.addEventListener('click', (e) => {
      const isOpen = toggle.getAttribute('aria-expanded') === 'true'
      if (isOpen) closeMenu()
      else openMenu()
    })

    // close when a nav link is clicked (good for single-page anchors)
    navLinks.querySelectorAll('a').forEach((link) => {
      link.addEventListener('click', () => {
        // small timeout to allow anchor jump, otherwise immediate close works too
        closeMenu()
      })
    })

    // close when clicking outside the navbar
    document.addEventListener('click', (e) => {
      if (!navbar.contains(e.target) && navLinks.classList.contains('open')) {
        closeMenu()
      }
    })

    // close on escape key
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape' && navLinks.classList.contains('open')) {
        closeMenu()
      }
    })

    // reset menu when resizing to desktop width
    const RESIZE_BREAKPOINT = 768
    let resizeTimer
    window.addEventListener('resize', () => {
      clearTimeout(resizeTimer)
      resizeTimer = setTimeout(() => {
        if (window.innerWidth > RESIZE_BREAKPOINT) {
          closeMenu()
        }
      }, 120)
    })
  })
</script>
